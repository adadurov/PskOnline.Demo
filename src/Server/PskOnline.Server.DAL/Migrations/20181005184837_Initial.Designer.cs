// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PskOnline.Server.DAL;

namespace PskOnline.Server.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181005184837_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PskOnline.Server.ObjectModel.BranchOffice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZoneId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("App_BranchOffice");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BranchOfficeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("TenantId");

                    b.ToTable("App_Department");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<Guid>("BranchOfficeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfEmployment");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("ExternalId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("Gender");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Patronymic");

                    b.Property<Guid>("PositionId");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("App_Employee");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Inspection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BranchOfficeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("DepartmentId");

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime?>("FinishTimeUtc");

                    b.Property<int>("InspectionPlace");

                    b.Property<int>("InspectionType");

                    b.Property<string>("MachineName");

                    b.Property<string>("MethodSetId");

                    b.Property<string>("MethodSetVersion");

                    b.Property<DateTime>("StartTimeUtc");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FinishTimeUtc");

                    b.HasIndex("MethodSetId");

                    b.HasIndex("StartTimeUtc");

                    b.HasIndex("TenantId");

                    b.ToTable("App_Inspection");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BranchOfficeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("TenantId");

                    b.ToTable("App_Position");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("App_Tenant");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BranchOfficeId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("DepartmentId");

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime>("FinishTimeUtc");

                    b.Property<Guid>("InspectionId");

                    b.Property<string>("MethodId")
                        .IsRequired();

                    b.Property<string>("MethodProcessedDataJson");

                    b.Property<string>("MethodRawDataJson");

                    b.Property<string>("MethodVersion");

                    b.Property<DateTime>("StartTimeUtc");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FinishTimeUtc");

                    b.HasIndex("InspectionId");

                    b.HasIndex("StartTimeUtc");

                    b.HasIndex("TenantId");

                    b.ToTable("App_Test");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Department", b =>
                {
                    b.HasOne("PskOnline.Server.ObjectModel.BranchOffice")
                        .WithMany("Departments")
                        .HasForeignKey("BranchOfficeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Position", b =>
                {
                    b.HasOne("PskOnline.Server.ObjectModel.BranchOffice")
                        .WithMany("Positions")
                        .HasForeignKey("BranchOfficeId");
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Tenant", b =>
                {
                    b.OwnsOne("PskOnline.Server.ObjectModel.ContactInfo", "PrimaryContact", b1 =>
                        {
                            b1.Property<Guid?>("TenantId");

                            b1.Property<string>("City")
                                .HasMaxLength(128);

                            b1.Property<string>("Comment");

                            b1.Property<string>("Email")
                                .HasMaxLength(128);

                            b1.Property<string>("FullName");

                            b1.Property<string>("MobilePhoneNumber");

                            b1.Property<string>("OfficePhoneNumber");

                            b1.Property<string>("StreetAddress")
                                .HasMaxLength(256);

                            b1.ToTable("App_Tenant");

                            b1.HasOne("PskOnline.Server.ObjectModel.Tenant")
                                .WithOne("PrimaryContact")
                                .HasForeignKey("PskOnline.Server.ObjectModel.ContactInfo", "TenantId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("PskOnline.Server.ObjectModel.TenantServiceDetails", "ServiceDetails", b1 =>
                        {
                            b1.Property<Guid?>("TenantId");

                            b1.Property<DateTime>("ServiceExpireDate");

                            b1.Property<int>("ServiceMaxEmployees");

                            b1.Property<int>("ServiceMaxStorageMegabytes");

                            b1.Property<int>("ServiceMaxUsers");

                            b1.ToTable("App_Tenant");

                            b1.HasOne("PskOnline.Server.ObjectModel.Tenant")
                                .WithOne("ServiceDetails")
                                .HasForeignKey("PskOnline.Server.ObjectModel.TenantServiceDetails", "TenantId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("PskOnline.Server.ObjectModel.Test", b =>
                {
                    b.HasOne("PskOnline.Server.ObjectModel.Inspection")
                        .WithMany("Tests")
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
